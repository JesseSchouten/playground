name: main
on:
  push:
    branches:
      - main
jobs:
  make_release:
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setting git config
        run: |
          git config --global user.email "services@dutchchannels.com"
          git config --global user.name "DutchChannels"

      - name: Clean up old release branches
        run: |
          git checkout main
          git tag --no-merged | xargs -r git push --delete origin
          git tag --no-merged | xargs -r git tag -d 
          git branch -r | grep 'release' | awk -F'/' '{print $2}' | xargs -r git push --delete origin

      - name: Creating new release
        run: |
          git checkout -b release

      - name: Building changelog
        id: version
        uses: ./.github/actions/make_changelog

      - name: Pushing release branch
        run: |
          git push -u origin release --follow-tags

  make_pr:
    runs-on: ubuntu-latest
    needs: make_release
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Create pull request
        uses: thomaseizinger/create-pull-request@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: refs/heads/release
          base: main
          title: Release ${{ needs.make_release.outputs.version }}
          body: Automated PR for release ${{ needs.make_release.outputs.version }}


  set_release_tag:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting git config
        run: |
          git config --global user.email "services@dutchchannels.com"
          git config --global user.name "DutchChannels"

      - id: get_version
        run: 'echo "::set-output name=version::$(cat VERSION.md)"'

      - name: Setting git tag and push
        run: |
          git tag @jesseschouten/playground@${{ steps.get_version.outputs.version }}
          git push origin @jesseschouten/playground@${{ steps.get_version.outputs.version }}
